--56
SELECT	BOOK.BOOK_TITLE, BOOK.BOOK_COST, BOOK.BOOK_YEAR
FROM	BOOK
ORDER BY	BOOK_TITLE
--57
SELECT PATRON.PAT_FNAME, PATRON.PAT_LNAME
FROM PATRON
ORDER BY PATRON.PAT_LNAME, PATRON.PAT_FNAME;

--58
SELECT	CHECKOUT.CHECK_NUM,CHECKOUT.CHECK_OUT_DATE,CHECKOUT.CHECK_DUE_DATE
FROM	CHECKOUT
ORDER BY	CHECKOUT.CHECK_NUM;
--59
SELECT	BOOK.BOOK_NUM, BOOK.BOOK_TITLE AS TITLE, BOOK.BOOK_SUBJECT AS [SUBJECT OF BOOK]
FROM	BOOK
ORDER BY	BOOK.BOOK_NUM;
--60
SELECT	DISTINCT BOOK.BOOK_YEAR
FROM	BOOK
ORDER BY	BOOK.BOOK_YEAR;
--61
SELECT DISTINCT BOOK.BOOK_SUBJECT
FROM BOOK;
--62
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_COST AS [Replacement Cost]
FROM BOOK;
--63
SELECT CHECKOUT.CHECK_NUM, CHECKOUT.BOOK_NUM, CHECKOUT.PAT_ID, CHECKOUT.CHECK_OUT_DATE, CHECKOUT.CHECK_DUE_DATE
FROM CHECKOUT
ORDER BY CHECKOUT.CHECK_OUT_DATE DESC , CHECKOUT.CHECK_NUM;
--64
SELECT BOOK.BOOK_TITLE, BOOK.BOOK_YEAR, BOOK.BOOK_SUBJECT
FROM BOOK
ORDER BY BOOK.BOOK_SUBJECT, BOOK.BOOK_YEAR DESC , BOOK.BOOK_TITLE;
--65
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_COST
FROM BOOK
WHERE (((BOOK.BOOK_COST)=59.95))
ORDER BY BOOK.BOOK_NUM;
--66
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_COST
FROM BOOK
WHERE (((BOOK.BOOK_SUBJECT)='Database'))
ORDER BY BOOK.BOOK_NUM;
--67
SELECT CHECKOUT.CHECK_NUM, CHECKOUT.BOOK_NUM, CHECKOUT.CHECK_OUT_DATE
FROM CHECKOUT
WHERE (((CHECKOUT.CHECK_OUT_DATE)<'4/5/2017'))
ORDER BY CHECKOUT.CHECK_NUM;
--68
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_YEAR
FROM BOOK
WHERE (((BOOK.BOOK_YEAR)>2015) AND ((BOOK.BOOK_SUBJECT)='Programming'))
ORDER BY BOOK.BOOK_NUM;
--69
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_SUBJECT, BOOK.BOOK_COST
FROM BOOK
WHERE (((BOOK.BOOK_SUBJECT)='Middleware') AND ((BOOK.BOOK_COST)>=70)) OR (((BOOK.BOOK_SUBJECT)='Cloud') AND ((BOOK.BOOK_COST)>=70))
ORDER BY BOOK.BOOK_NUM;
--70
SELECT AUTHOR.AU_ID, AUTHOR.AU_FNAME, AUTHOR.AU_LNAME, AUTHOR.AU_BIRTHYEAR
FROM AUTHOR
WHERE (((AUTHOR.AU_BIRTHYEAR) Between '1980' And '1989'));
--71
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_SUBJECT
FROM BOOK
WHERE (((BOOK.BOOK_TITLE) Like '%Database%'))
ORDER BY BOOK.BOOK_NUM;
--72
SELECT PATRON.PAT_ID, PATRON.PAT_FNAME, PATRON.PAT_LNAME
FROM PATRON
WHERE (((PATRON.PAT_TYPE)='Student'))
ORDER BY PATRON.PAT_ID;
--73
SELECT PATRON.PAT_ID, PATRON.PAT_FNAME, PATRON.PAT_LNAME, PATRON.PAT_TYPE
FROM PATRON
WHERE (((PATRON.PAT_LNAME) Like 'C%'))
ORDER BY PATRON.PAT_ID;
--74
SELECT AUTHOR.AU_ID, AUTHOR.AU_FNAME, AUTHOR.AU_LNAME
FROM AUTHOR
WHERE (((AUTHOR.AU_BIRTHYEAR) Is Null))
ORDER BY AUTHOR.AU_ID;
--75
SELECT AUTHOR.AU_ID, AUTHOR.AU_FNAME, AUTHOR.AU_LNAME
FROM AUTHOR
WHERE (((AUTHOR.AU_BIRTHYEAR) Is Not Null))
ORDER BY AUTHOR.AU_ID;
--76
SELECT CHECKOUT.CHECK_NUM, CHECKOUT.BOOK_NUM, CHECKOUT.PAT_ID, CHECKOUT.CHECK_OUT_DATE, CHECKOUT.CHECK_DUE_DATE
FROM CHECKOUT
WHERE (((CHECKOUT.CHECK_IN_DATE) Is Null))
ORDER BY CHECKOUT.BOOK_NUM;
--77
SELECT AUTHOR.AU_ID, AUTHOR.AU_FNAME, AUTHOR.AU_LNAME, AUTHOR.AU_BIRTHYEAR
FROM AUTHOR
ORDER BY AUTHOR.AU_BIRTHYEAR DESC , AUTHOR.AU_LNAME;
--78
SELECT Count(BOOK.BOOK_NUM) AS [Number of Books]
FROM BOOK;
--79
SELECT Count([subj_Alias].BOOK_SUBJECT) AS [Number of Subjects]
FROM (SELECT DISTINCT BOOK_SUBJECT FROM BOOK)  AS [subj_Alias];
--80
SELECT Count(BOOK.BOOK_NUM) AS [Available Books]
FROM BOOK
WHERE (((BOOK.PAT_ID) Is Null));
--81
SELECT Max(BOOK.BOOK_COST) AS [Most Expensive]
FROM BOOK;
--82
SELECT Min(BOOK.BOOK_COST) AS [Least Expensive]
FROM BOOK;
--83
SELECT Count([pat_id]) AS [DIFFERENT PATRONS]
FROM (select distinct pat_id from checkout)  AS [PATS_Alias];
--84
SELECT BOOK.BOOK_SUBJECT, Count(BOOK.BOOK_NUM) AS [Books In Subject]
FROM BOOK
GROUP BY BOOK.BOOK_SUBJECT, BOOK.BOOK_SUBJECT
ORDER BY Count(BOOK.BOOK_NUM) DESC , BOOK.BOOK_SUBJECT;
--85
SELECT WRITES.AU_ID, Count(WRITES.BOOK_NUM) AS [Books Written]
FROM WRITES
GROUP BY WRITES.AU_ID, WRITES.AU_ID
ORDER BY Count(WRITES.BOOK_NUM) DESC , WRITES.AU_ID;
--86
SELECT Sum(BOOK.BOOK_COST) AS [Library Value]
FROM BOOK;
--87
SELECT CHECKOUT.PAT_ID AS PATRON, CHECKOUT.BOOK_NUM AS BOOK, DATEDIFF(DD,CHECK_OUT_DATE,CHECK_IN_DATE) AS [DAYS KEPT]
FROM CHECKOUT;

--88
SELECT PATRON.PAT_ID, pat_fname + ' ' + pat_lname AS [Patron Name], PATRON.PAT_TYPE
FROM PATRON;

--89
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE+'('+BOOK.BOOK_YEAR+')' AS BOOK, BOOK.BOOK_SUBJECT
FROM BOOK;
--90
SELECT AUTHOR.AU_LNAME, AUTHOR.AU_FNAME, WRITES.BOOK_NUM
FROM AUTHOR INNER JOIN WRITES ON AUTHOR.AU_ID = WRITES.AU_ID;
--91
SELECT WRITES.AU_ID, BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_SUBJECT
FROM BOOK INNER JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM
ORDER BY BOOK.BOOK_NUM, WRITES.AU_ID;
--92
SELECT AUTHOR.AU_LNAME, AUTHOR.AU_FNAME, BOOK.BOOK_TITLE, BOOK.BOOK_COST
FROM AUTHOR INNER JOIN (BOOK INNER JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM) ON AUTHOR.AU_ID = WRITES.AU_ID
ORDER BY WRITES.BOOK_NUM, WRITES.AU_ID;
--93
SELECT PATRON.PAT_ID, BOOK.BOOK_NUM, PATRON.PAT_FNAME, PATRON.PAT_LNAME, BOOK.BOOK_TITLE
FROM PATRON INNER JOIN BOOK ON PATRON.PAT_ID = BOOK.PAT_ID
ORDER BY PATRON.PAT_LNAME, BOOK.BOOK_TITLE;
--94
SELECT PATRON.PAT_ID, [pat_fname] + ' ' + [pat_lname] AS NAME, PATRON.PAT_TYPE
FROM PATRON
ORDER BY ([PAT_TYPE]), PATRON.PAT_LNAME, ([PAT_FNAME]);
--95
SELECT CHECKOUT.BOOK_NUM, Count(CHECKOUT.CHECK_NUM) AS [Times Checked Out]
FROM CHECKOUT
GROUP BY CHECKOUT.BOOK_NUM
ORDER BY Count(CHECKOUT.CHECK_NUM) DESC;
--96
SELECT AUTHOR.AU_ID, AUTHOR.AU_FNAME, AUTHOR.AU_LNAME, WRITES.BOOK_NUM, BOOK.BOOK_TITLE
FROM AUTHOR INNER JOIN (BOOK INNER JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM) ON AUTHOR.AU_ID = WRITES.AU_ID
WHERE (((BOOK.BOOK_SUBJECT)='Cloud'))
ORDER BY BOOK.BOOK_TITLE, AUTHOR.AU_LNAME;

--97
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, AUTHOR.AU_LNAME, AUTHOR.AU_FNAME, BOOK.PAT_ID, PATRON.PAT_LNAME, PATRON.PAT_TYPE
FROM AUTHOR INNER JOIN ((PATRON INNER JOIN BOOK ON PATRON.PAT_ID = BOOK.PAT_ID) INNER JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM) ON AUTHOR.AU_ID = WRITES.AU_ID
ORDER BY BOOK.BOOK_TITLE;

--98
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, Count(CHECKOUT.CHECK_NUM) AS [Times Checked Out]
FROM BOOK LEFT JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
GROUP BY BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_TITLE
ORDER BY Count(CHECKOUT.CHECK_NUM) DESC , BOOK.BOOK_TITLE;
--99
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, Count(CHECKOUT.CHECK_NUM) AS [Times Checked Out]
FROM BOOK INNER JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
GROUP BY BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_TITLE
HAVING (((Count(CHECKOUT.CHECK_NUM))>5))
ORDER BY Count(CHECKOUT.CHECK_NUM) DESC , BOOK.BOOK_TITLE;
--100
SELECT AUTHOR.AU_ID, AUTHOR.AU_LNAME, BOOK.BOOK_TITLE, CHECKOUT.CHECK_OUT_DATE, PATRON.PAT_LNAME
FROM AUTHOR INNER JOIN (PATRON INNER JOIN ((BOOK INNER JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM) INNER JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM) ON (PATRON.PAT_ID = CHECKOUT.PAT_ID) AND (PATRON.PAT_ID = BOOK.PAT_ID)) ON AUTHOR.AU_ID = WRITES.AU_ID
WHERE (((AUTHOR.AU_LNAME)='Bruer') AND ((PATRON.PAT_LNAME)='Miles'))
ORDER BY CHECKOUT.CHECK_OUT_DATE;
--101
SELECT PATRON.PAT_ID, PATRON.PAT_FNAME, PATRON.PAT_LNAME
FROM PATRON LEFT JOIN CHECKOUT ON PATRON.PAT_ID = CHECKOUT.PAT_ID
WHERE (((CHECKOUT.CHECK_NUM) Is Null))
ORDER BY PATRON.PAT_LNAME, PATRON.PAT_FNAME;
--102
SELECT PATRON.PAT_ID, PATRON.PAT_LNAME, COUNT(CHECK_NUM) AS [NUM CHECKOUTS], [NUM DIFFERENT BOOKS]
FROM (SELECT PAT_ID, COUNT(BOOK_NUM) AS [NUM DIFFERENT BOOKS] 
            FROM (SELECT DISTINCT PAT_ID, BOOK_NUM 
                        FROM CHECKOUT)  AS sub2 
            GROUP BY PAT_ID)  AS S1 INNER JOIN (PATRON INNER JOIN CHECKOUT ON PATRON.PAT_ID = CHECKOUT.PAT_ID) ON S1.PAT_ID = PATRON.PAT_ID
GROUP BY PATRON.PAT_ID, PATRON.PAT_LNAME, [NUM DIFFERENT BOOKS]
HAVING COUNT(CHECK_NUM) >= 3
ORDER BY [NUM DIFFERENT BOOKS] DESC , "NUM CHECKOUTS" DESC , PATRON.PAT_ID;
--103
SELECT Round(Avg( DATEDIFF(DD,CHECK_OUT_DATE,CHECK_IN_DATE)),2) AS [Average Days Kept]
FROM CHECKOUT;
--104
SELECT CHECKOUT.PAT_ID, Round(Avg(DATEDIFF(DD,CHECK_OUT_DATE,CHECK_IN_DATE)),2) AS [Average Days Kept]
FROM CHECKOUT
GROUP BY CHECKOUT.PAT_ID
HAVING (((Count(CHECKOUT.CHECK_NUM))>=3))
ORDER BY Round(Avg(DATEDIFF(DD,CHECK_OUT_DATE,CHECK_IN_DATE)),2) DESC;
--105
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_COST
FROM BOOK
WHERE (((BOOK.BOOK_COST)=(select min(book_cost) from book)))
ORDER BY BOOK.BOOK_NUM;

--106
SELECT AUTHOR.AU_ID, AUTHOR.AU_FNAME, AUTHOR.AU_LNAME
FROM AUTHOR
WHERE (((AUTHOR.AU_ID) Not In (select au_id from writes inner join book on writes.book_num = book.book_num where book_subject = 'Programming')))
ORDER BY AUTHOR.AU_LNAME;
--107
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_SUBJECT, AVGCOST, book.book_cost - avgcost AS DIFFERENCE
FROM BOOK INNER JOIN (SELECT book_subject, round(avg(book_cost),2) AS avgcost FROM book GROUP BY book_subject)  AS s1 ON book.book_subject = s1.book_subject;
--108
SELECT BOOK.BOOK_NUM, BOOK.BOOK_TITLE, BOOK.BOOK_SUBJECT, AUTHOR.AU_LNAME, s1.numbooks AS [Num Books by Author]
FROM (AUTHOR INNER JOIN (SELECT au_id, count(book_num) AS numbooks FROM writes GROUP BY au_id)  AS s1 ON AUTHOR.AU_ID = s1.au_id) INNER JOIN (BOOK INNER JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM) ON AUTHOR.AU_ID = WRITES.AU_ID
WHERE (((BOOK.BOOK_SUBJECT)='Cloud'))
ORDER BY BOOK.BOOK_TITLE, AUTHOR.AU_LNAME;
--109
SELECT MIN(AVGCOST) AS [Lowest Avg Cost], max(avgcost) AS [Highest Avg Cost]
FROM (SELECT book_subject, round(avg(book_cost),2) AS avgcost FROM BOOK GROUP BY book_subject)  AS [%$##@_Alias];



